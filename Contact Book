import json

class ContactManager:
    def __init__(self):
        self.contacts = []
        self.load_contacts()

    def load_contacts(self):
        try:
            with open("contacts.json", "r") as file:
                self.contacts = json.load(file)
        except FileNotFoundError:
            self.contacts = []

    def save_contacts(self):
        with open("contacts.json", "w") as file:
            json.dump(self.contacts, file)

    def add_contact(self, name, phone, email, address):
        new_contact = {
            "name": name,
            "phone": phone,
            "email": email,
            "address": address
        }
        self.contacts.append(new_contact)
        self.save_contacts()
        print("Contact added successfully.")

    def view_contacts(self):
        if not self.contacts:
            print("No contacts found.")
        else:
            print("Contact List:")
            for idx, contact in enumerate(self.contacts, start=1):
                print(f"{idx}. {contact['name']} - {contact['phone']}")

    def search_contact(self, search_term):
        found_contacts = [contact for contact in self.contacts if search_term.lower() in contact["name"].lower() or search_term in contact["phone"]]
        if found_contacts:
            for contact in found_contacts:
                print(f"Name: {contact['name']}\nPhone: {contact['phone']}\nEmail: {contact['email']}\nAddress: {contact['address']}\n")
        else:
            print("No contacts found matching your search.")

    def update_contact(self, name):
        for contact in self.contacts:
            if contact["name"].lower() == name.lower():
                contact["phone"] = input("Enter new phone number: ")
                contact["email"] = input("Enter new email: ")
                contact["address"] = input("Enter new address: ")
                self.save_contacts()
                print("Contact updated successfully.")
                return
        print("Contact not found.")

    def delete_contact(self, name):
        for contact in self.contacts:
            if contact["name"].lower() == name.lower():
                self.contacts.remove(contact)
                self.save_contacts()
                print("Contact deleted successfully.")
                return
        print("Contact not found.")

    def user_interface(self):
        print("Welcome to the Codsoft Contact Manager!")
        while True:
            print("\nOptions:")
            print("1. Add Contact")
            print("2. View Contacts")
            print("3. Search Contact")
            print("4. Update Contact")
            print("5. Delete Contact")
            print("6. Exit")
            choice = input("Choose an option: ")

            if choice == "1":
                name = input("Enter name: ")
                phone = input("Enter phone number: ")
                email = input("Enter email: ")
                address = input("Enter address: ")
                self.add_contact(name, phone, email, address)

            elif choice == "2":
                self.view_contacts()

            elif choice == "3":
                search_term = input("Enter name or phone number to search: ")
                self.search_contact(search_term)

            elif choice == "4":
                name = input("Enter the name of the contact to update: ")
                self.update_contact(name)

            elif choice == "5":
                name = input("Enter the name of the contact to delete: ")
                self.delete_contact(name)

            elif choice == "6":
                print("Exiting the Contact Manager. Goodbye!")
                break

            else:
                print("Invalid choice. Please try again.")

# Instantiate and run the Contact Manager
contact_manager = ContactManager()
contact_manager.user_interface()
